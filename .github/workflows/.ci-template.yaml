name: _ci

on:
  workflow_call:

env:
  UNIT_TESTS_COVERAGE_FILE: coverage.xml
  PYTHON_VERSION: "3.10"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Set up python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Check formatting
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          version: "~= 23.0"

      - name: Run linter
        uses: chartboost/ruff-action@v1
        with:
          version: 0.0.259


  unit-tests:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set Up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-0  # increment to reset cache

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Show Poetry version
        run: poetry --version

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: make install-dev

      - name: Activate venv
        run: source $VENV || source .venv/bin/activate

      - name: Run unit tests
        run: make test

      - uses: actions/upload-artifact@v3
        name: Upload coverage report
        with:
          name: coverage-unit
          path: ${{ env.UNIT_TESTS_COVERAGE_FILE }}